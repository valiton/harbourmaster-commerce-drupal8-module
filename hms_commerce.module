<?php
/**
 * @file
 *
 * Module file containing HMS Commerce hooks.
 */

/**
 * Implements hook_library_info_build.
 *
 * Adds libraries dynamically depending on module settings.
 */
function hms_commerce_library_info_build() {
  $libraries = [];
  $settings = \Drupal::service('hms_commerce.settings');

  // Add digtap frontend widget js.
  $frontend_widget_js = $settings->getResourceUrl('digtap_frontend_widget');
  if (!empty($frontend_widget_js)) {
    $libraries['products']['js'][$frontend_widget_js] = [
      'type' => 'external', 'minified' => TRUE];
  }

  // Add digtap backend widget js.
  $backend_widget_js = $settings->getResourceUrl('digtap_backend_widget');
  if (!empty($backend_widget_js)) {
    $libraries['digtapProductWidget']['js'][$backend_widget_js] = [
      'type' => 'external', 'minified' => TRUE];
  }

  // Add premium content js.
  $premium_content_js = $settings->getResourceUrl('premium_content');
  if (!empty($premium_content_js)) {
    $libraries['premiumContent']['js'][$premium_content_js] = [
      'type' => 'external', 'minified' => TRUE];
  }
  return $libraries;
}

/**
 * Implements hook_entity_view_alter
 *
 * @param array $build
 * @param \Drupal\Core\Entity\EntityInterface $entity
 * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
 */
function hms_commerce_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  $manager = \Drupal::service('hms_commerce.premium_content_manager')
    ->setEntity($entity);

  if ($manager->entityIsPremium()) {
    $manager->encryptPremiumFields($build)
      ->addTeaserMarkup($build);
  }
}

//function hms_commerce_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//  dpm($form_id);
//}

//function hms_commerce_form_field_storage_config_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//  dpm($form);
//}
