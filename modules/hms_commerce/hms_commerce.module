<?php
/**
 * @file
 *
 * Module file containing HMS Commerce hooks.
 */

/**
 * Implements hook_library_info_build.
 *
 * Adds a JS library with dynamic source according to module settings.
 */
function hms_commerce_library_info_build() {
  $libraries = [];
  $settings = \Drupal::service('hms_commerce.settings');

  // Add digtap widget js.
  $widget_js = $settings->getApiUrl('digtap_widgets');
  if (!empty($widget_js)) {
    $libraries['products']['js'][$widget_js] = [
      'type' => 'external', 'minified' => TRUE];
  }

  // Add premium content js.
  $premium_content_js = $settings->getApiUrl('premium_content');
  if (!empty($premium_content_js)) {
    $libraries['premiumContent']['js'][$premium_content_js] = [
      'type' => 'external', 'minified' => TRUE];
  }
  return $libraries;
}

// Replaced with hook_entity_view_alter.
///**
// * Implements hook_preprocess_HOOK.
// *
// * Check if a field is premium, encrypt its output and hide it.
// *
// * @param $vars
// */
//function hms_commerce_preprocess_field(&$vars) {
//  $entity_fields = $vars['element']['#object']->getFields();
//  foreach ($entity_fields as $field) {
//    if ($field->getFieldDefinition()->getType() == 'premium_content') {
//      if (!empty($field->getValue())) {
//        if (in_array($vars['element']['#field_name'], $field->getSetting('premium_fields'))) {
//
//          // Encrypting field contents
//          foreach($vars['items'] as $i => $item) {
//            unset($vars['items'][$i]);
//            $vars['items'][$i]['content']['#markup'] = 'This content has been encrypted.';
//            $vars['attributes']['class'][] = 'premium';
//          }
//        }
//      }
//      break;
//    }
//  }
//}

/**
 * Implements hook_entity_view_alter.
 *
 * Encrypt all premium fields on entity view.
 */
function hms_commerce_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  $entity_fields = $entity->getFields();
  foreach ($entity_fields as $field) {
    if ($field->getFieldDefinition()->getType() == 'premium_content') {
      if (!empty($field->getValue())) {
        $premium_fields = array_filter($field->getSetting('premium_fields'), function($i){return !empty($i);});
        foreach($premium_fields as $premium_field_name) {
          if (isset($build[$premium_field_name])) {
            $build[$premium_field_name]['#attributes']['class'][] = 'premium-content'; //todo: Alter css class to what cloud expets.
            $encrypted_field = [
              '#markup' => render($build[$premium_field_name]), //todo: Encrypt here.
              '#weight' => $build[$premium_field_name]['#weight'],
            ];
            $build[$premium_field_name] = $encrypted_field;
          }
        }
      }
      break;
    }
  }
}
